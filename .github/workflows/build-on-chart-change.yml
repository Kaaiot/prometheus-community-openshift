name: Build Charts

on:
  push:
    branches:
      - main
    paths:
      - 'charts/**'

jobs:
  build:
    name: Run build.sh on helm-builder runner
    runs-on: [self-hosted, helm-builder]
    env:
      EMAIL: ${{ secrets.EMAIL }}
      USERNAME: ${{ secrets.USERNAME }}
      TOKEN: ${{ secrets.TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to switch branches
          token: ${{ secrets.TOKEN }}

      - name: Delete files in test1 branch
        run: |
          git config user.name $USERNAME
          git config user.email $EMAIL
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git checkout gh-pages
          
          # Delete all .tgz files in 'charts/' or anything you need
          find . -name '*.tgz' -exec git rm -f {} \;
          git rm -f index.yaml
          
          git commit -m "Clean up charts/*.tgz before build" || echo "No changes to commit"
          git push origin gh-pages
          git checkout main
      - name: Delete all GitHub releases and tags
        env:
          TOKEN: ${{ secrets.TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          echo "Fetching releases..."
          releases=$(curl -s -H "Authorization: token $TOKEN" \
            "https://api.github.com/repos/$REPO/releases" | jq -r '.[] | [.id, .tag_name] | @tsv')
      
          if [ -z "$releases" ]; then
            echo "No releases found."
            exit 0
          fi
      
          while IFS=$'\t' read -r release_id tag_name; do
            echo "Deleting release ID: $release_id with tag: $tag_name"
      
            # Delete the GitHub release
            curl -s -X DELETE -H "Authorization: token $TOKEN" \
              "https://api.github.com/repos/$REPO/releases/$release_id"
      
            # Delete the tag remotely
            git push origin --delete "$tag_name" || echo "Tag $tag_name not found on remote."
      
          done <<< "$releases"
  
      - name: Make build.sh executable
        run: chmod +x ./build.sh
        
      - name: Run build script
        run: ./build.sh
